template<int SZ> struct bitTrie {
    int trie[SZ][2];
    int cursz;
    bitTrie() {
        M00(i, SZ) M00(j, 2) trie[i][j] = -1;
        cursz = 1;
    }
    void insert(int k) {
        int cur = 0;
        M00d(i, 32) {
            int b = k&(1<<i) ? 1:0;
            if(trie[cur][b] == -1) {
                trie[cur][b] = cursz;
                cursz++;
            }
            cur = trie[cur][b];
        }
    }
    int query(int k) { //get max XOR with k
        int ans = 0;
        int cur = 0;
        M00d(i, 32) {
            int b = k&(1<<i) ? 1:0;
            if(trie[cur][0] == -1 && trie[cur][1] == -1) return ans;
            if(trie[cur][!b] == -1) {
                cur = trie[cur][b];
            } else {
                ans ^= 1<<i;
                cur = trie[cur][!b];
            }
        }
        return ans;
    }
};
